<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:eml="eml://ecoinformatics.org/eml-2.1.0"
    xmlns:ds="eml://ecoinformatics.org/dataset-2.1.0"
    xmlns:stmml="http://www.xml-cml.org/schema/stmml-1.1" exclude-result-prefixes="xs" version="2.0">

    <xsl:strip-space elements="*"/>

    <xsl:variable name="identifier" select="eml:eml/@packageId"/>

    <xsl:variable name="ltrim" select="replace($identifier, 'knb-lter-', '')"/>
    <xsl:variable name="revtrim" select="tokenize($ltrim, '\.')"/>
    <xsl:variable name="sevID" select="concat(upper-case($revtrim[1]), $revtrim[2])"/>


    <xsl:param name="doi" as="xs:string" required="yes"/>

    <xsl:template name="doi2url">
        <xsl:value-of select="replace($doi, 'doi:', 'http://dx.doi.org/')"/>
    </xsl:template>

    <xsl:template name="dublin-core" match="dataset">
        <xsl:if test="./title">
            <xsl:element name="dcvalue">
                <xsl:attribute name="element">
                    <xsl:text>title</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="qualifier">
                    <xsl:text>none</xsl:text>
                </xsl:attribute>
                <xsl:apply-templates select="./title"/>
            </xsl:element>
        </xsl:if>
        <xsl:if test="./creator">
            <xsl:for-each select="./creator">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>contributor</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>author</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates select="./individualName/surName"/>
                    <xsl:text>, </xsl:text>
                    <xsl:apply-templates select="./individualName/givenName"/>
                    <!--<xsl:if test="./organizationName">
                        <xsl:text> (</xsl:text>
                        <xsl:apply-templates select="./organizationName"/>
                        <xsl:text>)</xsl:text>
                    </xsl:if>-->
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="./description">
            <xsl:for-each select="./description">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>description</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>none</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <!--
            Add some boilerplate 
        -->
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>description</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>none</xsl:text>
            </xsl:attribute>
            <xsl:text>
                    This dataset was originally published on the Long Term Ecological Research (LTER) Network Data Portal, https://portal.lternet.edu, and potentially via other repositories or portals as described. The Digital Object Identifier (DOI) of the source data package is 
                </xsl:text>
            <xsl:value-of select="$doi"/>
            <xsl:text>, and may be accessed at </xsl:text>
            <xsl:call-template name="doi2url"/>
            <xsl:text>. Metadata and files included in this record mirror as closely as possible the source data and documentation, with the provenance metadata and quality report generated by the LTER portal reproduced here as '*-provenance.xml' and *-report.html' files, respectively.</xsl:text>
        </xsl:element>
        <!--
            Include the DOI or DOI URL as DC source
        -->
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>source</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>none</xsl:text>
            </xsl:attribute>
            <xsl:call-template name="doi2url"/>
        </xsl:element>
        <xsl:if test="./abstract">
            <xsl:for-each select="./abstract">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>description</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>abstract</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <!--<xsl:if test="./additionalInfo">
            <xsl:for-each select="./additionalInfo">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>description</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>none</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>-->
        <xsl:if test="./keywordSet">
            <xsl:for-each select="./keywordSet/keyword">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>subject</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>none</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="./pubDate">
            <xsl:for-each select="./pubDate">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>date</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>issued</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates/>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="./publisher">
            <xsl:for-each select="./publisher">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>publisher</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>none</xsl:text>
                    </xsl:attribute>
                    <xsl:if test="./organizationName">
                        <xsl:value-of select="./organizationName"/>
                        <xsl:if test="./address">
                            <xsl:if test="./address/deliveryPoint">
                                <xsl:text>, </xsl:text>
                                <xsl:value-of select="./address/deliveryPoint"/>
                            </xsl:if>
                            <xsl:if test="./address/city">
                                <xsl:text>, </xsl:text>
                                <xsl:value-of select="./address/city"/>
                            </xsl:if>
                            <xsl:if test="./address/postalCode">
                                <xsl:text>, </xsl:text>
                                <xsl:value-of select="./address/postalCode"/>
                            </xsl:if>
                        </xsl:if>
                    </xsl:if>
                </xsl:element>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="./coverage">
            <xsl:if test="./coverage/geographicCoverage">
                <xsl:element name="dcvalue">
                    <xsl:attribute name="element">
                        <xsl:text>coverage</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="qualifier">
                        <xsl:text>spatial</xsl:text>
                    </xsl:attribute>
                    <xsl:apply-templates
                        select="./coverage/geographicCoverage/geographicDescription"/>
                </xsl:element>
            </xsl:if>
            <xsl:if test="./coverage/temporalCoverage">
                <xsl:if test="./coverage/temporalCoverage/singleDateTime">
                    <xsl:for-each select="./coverage/temporalCoverage/singleDateTime">
                        <xsl:if test="./calendarDate">
                            <xsl:element name="dcvalue">
                                <xsl:attribute name="element">
                                    <xsl:text>coverage</xsl:text>
                                </xsl:attribute>
                                <xsl:attribute name="qualifier">
                                    <xsl:text>temporal</xsl:text>
                                </xsl:attribute>
                                <xsl:apply-templates select="./calendarDate"/>
                            </xsl:element>
                        </xsl:if>
                        <!--
                            Not sure we need at this point to account for time and
                            alternativeTimeScale elements
                        -->
                    </xsl:for-each>
                </xsl:if>
                <xsl:if test="./coverage/temporalCoverage/rangeOfDates">
                    <xsl:element name="dcvalue">
                        <xsl:attribute name="element">
                            <xsl:text>coverage</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="qualifier">
                            <xsl:text>temporal</xsl:text>
                        </xsl:attribute>
                        <xsl:apply-templates
                            select="./coverage/temporalCoverage/rangeOfDates/beginDate/calendarDate"/>
                        <xsl:text> - </xsl:text>
                        <xsl:apply-templates
                            select="./coverage/temporalCoverage/rangeOfDates/endDate/calendarDate"/>
                    </xsl:element>
                </xsl:if>
            </xsl:if>
        </xsl:if>
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>rights</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>none</xsl:text>
            </xsl:attribute>
            <xsl:text>Data Policies: This dataset is released to the public and may be freely downloaded. Please keep the designated Contact person informed of any plans to use the dataset. Consultation or collaboration with the original investigators is strongly encouraged. Publications and data products that make use of the dataset must include proper acknowledgement of the Sevilleta LTER. Datasets must be cited as in the example provided. A copy of any publications using these data must be supplied to the Sevilleta LTER Information Manager.</xsl:text>
        </xsl:element>
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>rights</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>uri</xsl:text>
            </xsl:attribute>
            <xsl:text>By downloading any data you implicitly acknowledge the LTER Data Policy (http://www.lternet.edu/data/netpolicy.html).</xsl:text>
        </xsl:element>
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>identifier</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>citation</xsl:text>
            </xsl:attribute>
            <xsl:call-template name="build-citation"/>
        </xsl:element>
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>identifier</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>other</xsl:text>
            </xsl:attribute>
            <xsl:value-of select="$doi"/>
        </xsl:element>
        <xsl:element name="dcvalue">
            <xsl:attribute name="element">
                <xsl:text>identifier</xsl:text>
            </xsl:attribute>
            <xsl:attribute name="qualifier">
                <xsl:text>other</xsl:text>
            </xsl:attribute>
            <xsl:value-of select="$sevID"/>
        </xsl:element>
    </xsl:template>

    <!--
        Build the citation to be identical to the one provided on LTER portal
    -->

    <xsl:template name="build-citation">
        <xsl:if test="./creator">
            <xsl:for-each select="./creator">
                <xsl:apply-templates select="./individualName/surName"/>
                <xsl:text>, </xsl:text>
                <xsl:apply-templates select="./individualName/givenName"/>
                <xsl:if test="following-sibling::creator[1] != 'creator'">
                    <xsl:text>; </xsl:text>
                </xsl:if>
            </xsl:for-each>
        </xsl:if>
        <xsl:if test="./pubDate">
            <xsl:text> (</xsl:text>
            <xsl:apply-templates select="./pubDate"/>
            <xsl:text>): </xsl:text>
        </xsl:if>
        <xsl:if test="./title">
            <xsl:apply-templates select="./title"/>
            <xsl:text>.</xsl:text>
        </xsl:if>
        <xsl:text> Long Term Ecological Research Network. </xsl:text>
        <xsl:call-template name="doi2url"/>
    </xsl:template>

    <!-- handle node attributes -->

    <xsl:template name="dataset-id">
        <xsl:value-of select="@id"/>
    </xsl:template>

    <xsl:template name="dataset-system">
        <xsl:value-of select="@system"/>
    </xsl:template>

    <xsl:template name="dataset-scope">
        <xsl:value-of select="@scope"/>
    </xsl:template>

    <!-- handle child nodes -->

    <xsl:template match="purpose">

        <xsl:apply-templates/>

    </xsl:template>


    <xsl:template match="citetitle">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="maintenance">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="description">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="maintenanceUpdatedFrequency">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="changeHistory">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="changeScope">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="oldValue">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="changeDate">

        <xsl:apply-templates/>

    </xsl:template>

    <xsl:template match="comment">

        <xsl:apply-templates/>

    </xsl:template>

</xsl:stylesheet>
